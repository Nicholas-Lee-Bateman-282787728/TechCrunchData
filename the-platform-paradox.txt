
Eric Paley is a managing partner at Founder Collective. I often hear VCs say that they dont back products, they back platforms. I find that logic backwards and in many ways dangerous for founders. Platforms can provide a durable competitive advantage, and its easy to understand why startups would want to create one. But great platforms are nearly always born from companies first creating great products with narrow, but compelling use cases.Founders have a hard time accepting this advice, because they hear that VCs only want to back businesses with unicorn potential. They have difficulty imagining that a niche point solution could fit the bill. So they dream up a story of how their startup could become a platform and lose focus on the problem theyre solving.Given all the discussion of platforms, networks, marketplaces and horizontal strategies, its surprising that more hasnt been written defining and delineating these terms. Before I explain why entrepreneurs should ignore the platform logic, I will do my best to provide definitions to these different concepts. I do not consider these definitions to be comprehensive and am opento engaging with anyone who thinks about these concepts differently.Products are tools or services that you have some exclusive ownership of or access to.iPhones and GoPros are products. Microsoft Office and Adobe Photoshop are products. Candy Crush and The New York Times mobile app are products.You might pay a flat price, a SaaS fee, trade your attention for ads, get some amount of free usage or partake in in-app purchases, but the concept is the same. You buy or sign up for something and use it. A good product solves a specific need for the user whether a trivial utility or a practical one.Amazon Web Services, iOS and Android are platforms. The distinguishing aspect of a platform is the ability for others to build products and ultimately generate revenue on top of it, often in ways the platform creator never imagined.Platforms generate revenue by taking a cut of proceeds, and costs tend to scale in proportion to their use.People often confuse platforms with products that posses network effects, but they are different things. LinkedIn is a network, that later became a platform for recruiting. Pinterest is a beautiful interest graph and not a development platform, yet it is becoming a platform for advertising as it grows. Both services offer APIs, but an API does not a platform make.Marketplaces like eBay, Airbnb and Etsy are networked products that feel like platforms because you can make money using them, but limit the ways you can use them. I cant sell a car on Airbnb or rent a castle on eBay. The primary value in marketplaces is derived from the liquidity. Youre not building value on top of these networks, youre exchanging value within them.There is value to be created on the margins of these services  listing management tools for eBay power sellers, or home cleaners for Airbnb hosts  but the primary value creation accrues to the company who creates the network. Airbnb is no more a platform for housekeepers than a high rise office building is.Reasonable people can disagree with these definitions. For instance, each of these companies is a product company of one sort or another. But they at least clarify some major distinctions.Most VCs have never built companies and some do not fully appreciate the challenges of doing so. Founders may have a great idea for a startup that would solve a real problem. There may even be a clear revenue model, but the founders fear that it all sounds too small. Instead of touting their product, founders dream up some abstract notion that combines a multibillion-dollar Total Addressable Market (TAM) that applies tech in some incredibly bold, yet ambiguous way.VCs start by looking at the billion-dollar platform idea and want to believe that youll birth your company to achieve the end state on day one. There is nothing wrong with painting the big picture of what your company will become over time, but make sure those VCs know that youre going to start by solving a real problem for customers and that youre going to build a product now that hopefully can become a platform over time. Most importantly, tell them youre not going to get distracted building a grandiose platform that no one wants today.This is how platform logic becomes dangerous. When specs are broad enough to apply to many different customers, they often work well for no one. Product managers dabble with small customizations, but try to preserve the breadth to do anything. Horizontal platforms leave startups waiting for markets to come to them. That can take a long time. It usually never happens.Narrow, vertical product use cases often seem insignificant compared to the promise of a platform. Unfortunately, products and platforms are mutually exclusive at early-stage startups. It is nearly impossible to offer a high-quality use case while also being a platform.When I hear founders who barely have a demo talk about their platform play, I hear a founder without a clear grasp of their customers needs. Abstraction lends itself to grand pronouncements, but is usually so general as to be unactionable.At that point I ask about how the platform will reach critical mass. What follows is invariably hand-waving of some sort. The marketing plan usually involves a few key influencers and a hodge-podge of unquantifiable marketing programs, but it is nearly impossible to build critical mass when no one understands what specific problem youre solving.Having a big vision is usually a good thing unless it becomes a huge distraction. To become a platform you first need to build a product that speaks to a compelling use case.If youre stuck on the notion of building a platform, at least devote time to developing a credible Single Player Mode. Whatever you build should offer value even if only one person signs up. Instagram helps people take better photos, and the network comes afterward. Pinterest can serve as a mood board for crafters; the connections it enables turn it into a sewing circle with global scale. Minecraft is like the worlds biggest LEGO set, and an Internet connection turns it into the worlds biggest playgroup.Platforms can be compelling businesses, but its nearly impossible for a startup to create one from scratch. Remember when Google tried to build a Glass Collective (imitation is the greatest form of flattery) with support from A16Z and Kleiner Perkins, but still ended up killing the project?Ultimately Google should have prioritized building a compelling product rather than building a platform for a product nobody wanted.The reality is that most platforms in the startup world emerge as the byproduct of a successful product solution. Amazons AWS, Facebook and iOS are arguably three of the most important platforms in tech today, but each company entered the platform business somewhat unwittingly.Amazon Web Services (AWS) has become a core part of the startup infrastructure and has probably been the single-most important innovation responsible for the explosion of startups since the formalization of the HTTP standard.But remember, Amazon didnt set out to build a generic computing infrastructure platform, they sold Harlequin romance novels, DVD box sets of Lost, tennis rackets and millions of other products.It wasnt until they mastered the grubby art of shipping and receiving that they turned their attention towards computing services. Their platform was the byproduct of a much loved and trusted point solution, not the companys focus.Even when they did make the move into building a platform, it was marketed directly to a specific customer  startup founders. Privacy regulations in healthcare and finance and security concerns in the enterprise, made it a poor fit to start, so they ignored those markets. They didnt make gauzy promises to a wide swath of companies, they built a use case that was exactly what high-growth startups needed.Amazon was founded in 1994, didnt offer AWS until 2006, and only started breaking out earnings for AWS in 2015. Theres no reason your business couldnt become a platform in time, but keep in mind that it took one of the most successful web companies in history over a decade to get there. Pace yourself.This was not a platform.Building a platform wasnt Mark Zuckerbergs original goal. He didnt even have photo sharing in V.1 of TheFacebook.com.Before it became the platform that popularized Farmville, it was a simple product that let college students search their friends friends. Now it powers login across the web and is the fastest growing ad platform in history.Facebook was founded in 2004. It wasnt until 2007, and a user base with hundreds of millions of users, that itannounced itsfirst efforts at becoming platform. Thats three years of building an amazing product, listening to their user base, and focusing on Facebook the product and network. Remember, the platform that has connected a billion and a half people couldnt be accessed without an .edu email address a decade ago.Apple didnt even have enough apps to fill out the home screen,never mind an app store, at launch.Its hard to remember, but when the iPhone launched in 2007 it was just the best smartphone the world had ever seen. It didnt even have copy and paste, and the Theres an App for That ad campaigns and billion dollar payouts to developers were still a couple years away.Software engineers were knocking down Apples door to build apps, basically offering Apple a platform from day one, and the company rebuffed them, encouraging developers to build web apps instead.Think about that. Apple was riding a hot streak of success with the iPod, had billions of dollars in the bank, and legions of fanatics and friendly voices in the press. The companyhad the opportunity to build a platform from day one and paused, realizing that itneeded to focus on the products core use before opening it up to a wider audience. Today, iOS is one of the most important platforms in the history of computing, but it started simply as a slick product.Unless youre smarter than Steve Jobs, start by solving a problem for your customer and only become a platform when youve become the standard in solving that problem.
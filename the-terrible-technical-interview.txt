Traditional technical interviews are terrible for everyone. Theyre a bad way for companies to evaluate candidates. Theyre a bad way for candidates to evaluate companies. They waste time and generate stress on both sides. Almost everyone, if pressed, will admit this. And yet they persist.I humbly suggest that it is time for engineers who have the luxury of choice to start to flatly refuse to participate in them.Dont panic. I have a better alternative. Read on.In the last month Danny Crichton has written a couple of excellent posts about technical interviews: you should read them, but let me just cite some highlights:Few professions seem so openly hostile to their current members as software engineering  we expect people to do live engineering on a white board under stressful interview conditions because, well, because that is what we have always done  In a time of engineer austerity, we simply cant afford to throw away so much talent.He in turn was inspired by Thomas Ptacek:The software developer job interview doesnt work. Companies should stop relying on them. The savviest teams will outcompete their peers by devising alternative hiring schemes.Indeed. And, anecdotally, I do have the impression that things are finally changing. More companies are asking candidates to do test projects rather than whiteboard interviews. Others are becoming less fanatical about eliminating false positives at the interview stage (but more ruthless about firing them after a couple of months.) It helped that Googles head of HR admitted, a few years ago: Brainteasers are a complete waste of time and test scores are worthless.@sarahmei tech interviews depend a lot on hazing mentality: we went through this, so we have to make them go through it toi Amy Hendrix (@sabreuse) March 20, 2015And yet. I may have aspirationally written The Technical Interview Is Dead a couple of years ago, but it aint so. Not yet, at least. Its dying, but far too slowly.We haters need to concede a point: there are reasons, some of them semi-valid, that companies persist with whiteboard-style interviews, even though they know theyre far from perfect. These include:So: if we were to find a reliable replacement for the traditional technical interview, it would be good for companies, it would be good for candidates, and it would help to increase the numbers of underrepresented groups who are currently implicitly overlooked by the recommendation process. Thats a pretty huge win-win-win for everyoned.I would be remiss to not mention that there are many startups trying to do all this. But I have a different idea. One which puts more of an onus on candidates  but in a good way, I think. I propose that:Heres the process I have in mind:Voila: a replacement for the technical interview, one with no whiteboard coding, no gotcha questions, no demands for intimate knowledge of the implementation details of algorithms the candidate will never have to write again. I dont pretend that its a perfect final solution for all and sundry  but I do believe that for most companies still stuck doing whiteboard interviews, it or something like it would be a viable and far better alternative to the status quo.Now, this does require one huge prerequisite: every candidate must have a side project that they wrote, all by themselves, to serve as their calling card.I dont think thats unreasonable. In fact, I think you can very happily filter out anyone who doesnt have such a calling card. (And lest I be accused of talking the talk without walking the walk: I am very happily employed as a full-time software engineer; I travel a lot, and I write books, along with this here weekly TechCrunch column; and I still find the time to work on my own software side projects. Heres my latest, open-sourced.)Four years ago, when I first started ranting here about the ineffective counterproductivity of the traditional software interview, I wrote: Dont interview anyone who hasnt accomplished anything. Ever. Certificates and degrees are not accomplishments; I mean real-world projects with real-world users. There is no excuse for software developers who dont have a site, app, or service they can point to and say, I did this, all by myself! in a world where Google App Engine and Amazon Web Services have free service tiers, and it costs all of $25 to register as an Android developer and publish an app on the Android Market.I think thats even more true today. But the flip side is, if you do have an accomplishment, a pet project to point to, then you shouldnt have to jump through the meaningless hoop of a whiteboard coding interview. Youre better than that. We all are.
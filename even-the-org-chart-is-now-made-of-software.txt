
Roy Bahat is the head of Bloomberg Beta.Once upon a time, if someone asked how your company was organized, youd give them an org chart  a page with lots of boxes on it. One box for the CEO, some lines to all the CEOs direct reports, more from each person to her direct reports, and so on, until every person was duly boxed.The problem is, reality makes a mess of that. We did one of those leadership retreats at my old company (what were we retreating from, exactly?). We all stood on the floor where our org chart had been drawn out  each in our box. Then, we each took a ball of yarn and threw it to a person upon whom we depended to do our jobs, who then threw it to another person. By the end, it was spaghetti.The org chart, today, struggles to show how work actually gets done.To solve that, we started inventing workarounds: status report meetings, task forces, dual reporting, matrix reporting (one person for this, another for that) and all manner of pointy-haired boss sleight of hand. The org chart itself was, of course, in a constant state of change (despite our myth that there are re-orgs that change it, its more like the re-org is constant and stasis is the exception). We pretend the org chart is fixed  its the ultimate insult to an agile organization.What if we turned it around. What if, instead of having an org chart to map the work to the people, we made a work chart to map the people to the work?There could be clarity of responsibility over the different things a company does, because it would be easier to show people playing different roles on different areas of work  as they actually do. (When it comes to security policy, the CISO often trumps the CEO.)Enter new forms of organization built this way, work chart, not org chart  most famously, Holacracy, now going live at Zappos, and Dev Bootcamp, in production at Medium and many other companies.At Bloomberg Beta, we invest in making business work better, so we figured we better get over chuckling every time we said Holacracy out loud and actually understand this thing. So we did a couple of days of official Holacracy training. It was worth it. We saw a system with deep insights (put the work first and leave the reporting at the door!), busted myths (it is a deeply hierarchical system, just a different hierarchy, of work not of people) and learned inscrutable rules. (I dare you to read theHolacracy Constitution, already in version 4.1.)With all its forced conventions for describing things, one way to see Holacracy is as a protocol for work. Our partner James described Holacracy as TCP/IP for organizations, and understood why it appeals to so many technical leaders. Our partner Karin wondered if it left a human element behind. To me, it felt like playing Dungeons & Dragons  lots of painfully specific rules (now, roll a 20-sided die to figure out how charismatic you are!), but once you grok them, you feel powerful enough to go monster hunting.The light bulb went on at the end of training. Youre holding all these handbooks and rule guides in your hands (on nifty reminder cards, no less) and you think,How will I ever be able to remember all this, let alone use it?Theres a simple answer: Software.Holacracy runs on (requires?) a project management tool calledGlassFrog. So much so, I wondered why have us learn all these new rules at all? Maybe just make us use GlassFrog, and then well just be in the new system.If you want to implement a new organization, the carrier for the virus is  almost always  software.Then I realized that while most startups (surprisingly) do precious little innovation on how they organize themselves (OKRs, a popular Silicon Valley framework for goal tracking, is the ultimate management tool for pyramidal hierarchies), they are almost always organizational innovators on one important dimension: Software. Almost every startup uses different software from a big company to manage its activities.This kind of organization-by-software started one function at a time: Coordinating a companys sales to customers (conversations with different groups, both on the seller side and the buyer side) was once intimidatingly difficult to track. Enter CRM, which brought all that conversation to one place. Sales conversations are so complex we need software to make sense of them. (The same change is sweeping other functions  data collaboration with software like Alation, talent tracking with applicant tracking systems, etc. CRM set a mold for many other functions to follow.)And across an entire company, the software we use torunstartups  GitHub, Slack, Trello, etc.  all carries with it profound assumptions about how to organize.Have one person in charge of the master copy of something, and others propose changes (i.e., pull requests) where each contribution gets tracked and conflicts get resolved.Let people who work for a company assign themselves to groups to communicate on different projects (channels), chunk work up (into cards), reward one another (see our portfolio company, Bonusly), outsource their work (Gigster, another of ours) or talk about a project (Knotable, also a Beta company, in the middle space between chat that disappears and finished document that feels like too much).An org chart can only handle so much complexity  every person gets categorized in a single place, more or less. Software can handle lots more.Instead of boxing people, softwares metaphor is tagging, where people can be associated with many projects (and opt in and out of them easily).James, who was once a software engineer himself, calls all this taking the metaphors of software development into the real world. Software eats the world for breakfast to be sure, and the ideas that software has developed go shopping for the groceries beforehand. (Even HR, previously the domain of the merely literate, has become a place for the numerate: you might need to understand metrics, and the analogies of software, to run a good org.)So, while we all debate whether the idea of having managers is fashionable or unfashionable, and try to teach ourselves new ways to talk to one another, encourage one another, evaluate, monitor, assign, grow, describe, pay and boss one anothers work  the software is doing the real work for us.Maybe, in some way, the new org chart is actually made of software.(NB: Its only a short step from here to having the software continue to do work that people once did, as our work inmachine intelligencesuggests will happen more and more)